@charset "UTF-8";

@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap');

@font-face {
    font-family: 'Android';
    src: url(../fontes/idroid.otf) format('opentype');
    font-weight: normal;
}

:root {
    --cor0: #c5ebd6;
    --cor1: #83e1ad;
    --cor2: #3ddc84;
    --cor3: #2fa866;
    --cor4: #1a5c37;
    --cor5: #063d1e;

    --fonte-padrao: Arial, Verdana, Helvetica, sans-serif;
    --fonte-destaque: 'Bebas Neue', 'cursive';
    --fonte-android: 'Android', 'cursive';
}

* { /* use o asterisco(*) como seletor global */
    margin: 0px;
    padding: 0px;
}

body {
    background-color: var(--cor0);
    font-family: var(--fonte-padrao);
}

a.externo::after {          /* significa todos os links da class externo vou colocar depois dele */
    content: '\00A0\1F517'; /* 00A0 = espaço , codigo U+1F517 do emojipedia */
}

header {
    background-image: linear-gradient(to bottom, var(--cor3), var(--cor5));
    min-height: 150px;
    text-align: center;
    padding-top: 40px;
}

header > h1 {
    color: white;
    font-family: var(--fonte-destaque);
    font-size: 3em;
    font-weight: normal;
    margin-bottom: 30px;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.267);
}

header > p {
    font-family: var(--fonte-padrao);
    font-size: 1.2em;
    color: white;
    max-width: 600px;
    padding-right: 10px;
    padding-left: 10px;
    margin: auto;             /* foi necessario pois devido ao max width ele virou um bloco */
    margin-bottom: 30px;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.315);
}

nav {
    background-color: var(--cor5);
    padding: 10px;
    box-shadow: 0px 7px 7px rgba(0, 0, 0, 0.192);
}

nav > a {
    color: var(--cor1);
    padding: 10px;
    border-radius: 5px;
    text-decoration: none;
    font-weight: bold;
    transition-duration: .5s; /* cria meio segundo de transição ao passar o mouse por cima */
}

nav > a:hover {              /* muda as cores ao passar o mouse por cima */
    background-color: var(--cor3);
    color: var(--cor5);
}

main {

    min-width: 300px;
    max-width: 1000px;
    margin: auto;
    margin-bottom: 30px;
    padding: 20px;
    background-color: white;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.418);
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}

main h1 {
    color: var(--cor5);
    font-family: var(--fonte-android);
    font-weight: normal;
    font-size: 1.8em;
}

main h2 {
    font-family: var(--fonte-android);
    color: var(--cor4);
    font-size: 1.3em;
    font-weight: normal;
    background-image: linear-gradient(to right, var(--cor1), transparent);
    text-indent: 8px;
}

main p { /* nao foi feito main > p pois existe um article dentro de main, e dessa maneira feita o p pode estar dentro de outras tags */
    margin: 15px 0px;   /* lembrando que é o mesmo que 15px 0px 15px 0px */
    text-align: justify;
    text-indent: 30px;
    font-size: 1em;
    line-height: 2em; /* é o espaço vertical entre uma linha a outra */
}

main strong {   /* para tudo que for strong */
    color: var(--cor4);
    font-weight: bold;
}

main a {      /* todos os links que estao dentro do conteudo principal */
    text-decoration: none;
    font-weight: bold;
    color: var(--cor5);
    background-color: var(--cor1);
    padding: 2px 6px;
}

main a:hover {
    text-decoration: underline;
    color: var(--cor4);
}

main img {
    width: 100%;
}

main img.pequena {
    max-width: 350px;
/*  width: 50%;     /  pois a imagem estava grande e com uma qualidade ruim /       [foi corrigido no video 40]    */
    display: block; /* foi criado o display block pois o margin auto nao funcionou [pois imagem por padrao nao é um bloco] */
    margin: auto;   /* para centralizar a imagem */
}

div.video {         /* significa tudo que é div da class video */
    background-color: var(--cor5);
    margin: 0px -20px 30px -20px;
    padding: 20px;
    padding-bottom: 59%;
    position: relative;
}

div.video > iframe {
    position: absolute;
    top: 5%;
    left: 5%;
    width: 90%;
    height: 90%;
}

/*
O que nos importa mais aqui é entender o funcionamento da propriedade position, que é a única que não vimos até aqui. O valor padrão para essa propriedade de posicionamento é static, que mantém a hierarquia conforme estabelecido no documento HTML. 
Na div, nós colocamos o valor como relative para que seja considerado o posicionamento atual do elemento de divisão e que ele se mantenha adaptável para o caso de alteração no tamanho do navegador. 
Já dentro do iframe, nós usamos o posicionamento absolute para que a div - que é o seu contêiner - torne-se o ponto de partida para o posicionamento do frame. A partir daí, podemos utilizar propriedades para configurar o deslocamento à esquerda (left) e ao topo (top) e seu tamanho em largura (width) e altura (height), todos em porcentagem de tela.
*/

aside {
    background-color: var(--cor1);
    padding: 10px;
    border-radius: 10px;
    box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.281);
}

aside > h3 {
    background-color: var(--cor4);
    color: white;
    padding: 10px;
    margin: -10px -10px 0px -10px;
    border-radius: 10px 10px 0px 0px;
}

aside > ul {                            /* apenas listas dentro de aside */
    list-style-type: '\2714\00A0\00A0'; /* codigo U+2714 do emojipedia e 00A0 = espaço, no exemplo foi usado 2 espacos */
    /* o exemplo de cima pode nao ser compativel em todos os navegadores, mas no chrome funciona */
    list-style-position: inside;  /* a posição da lista para o lado de dentro, pois o padrao é do lado de fora (outside) */
    columns: 2;                   /* dividir em duas colunas */
}

footer {
    background-color: var(--cor5);
    color: white;
    text-align: center;
    font-size: 0.8em;
    padding: 5px;
}

footer a {  /* fez dessa maneira pois tem um p antes do a [footer > p > a] */
    color: white;
    font-weight: bolder;
    text-decoration: none;
}

footer a:hover {
    text-decoration: underline;
    color: var(--cor1);
}